// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class PathDatasetDiff {
    public List<PathDatasetComponentBlob> A;
    public List<PathDatasetComponentBlob> B;

    public PathDatasetDiff() {
        this.A = null;
        this.B = null;
    }

    public PathDatasetDiff setA(List<PathDatasetComponentBlob> value) {
        this.A = value;
        return this;
    }
    public PathDatasetDiff setB(List<PathDatasetComponentBlob> value) {
        this.B = value;
        return this;
    }

    static public PathDatasetDiff fromProto(ai.verta.modeldb.versioning.PathDatasetDiff blob) {
        PathDatasetDiff obj = new PathDatasetDiff();
        {
            Function<List<PathDatasetComponentBlob>,List<PathDatasetComponentBlob>> f = null;
            if (f != null) {
                obj.A = f.apply(null);
            }
        }
        {
            Function<List<PathDatasetComponentBlob>,List<PathDatasetComponentBlob>> f = null;
            if (f != null) {
                obj.B = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<List<PathDatasetComponentBlob>,Void> f = v -> {v.stream().forEach(s -> s.preVisitDeep(visitor)); return null;};
            if (f != null) {
                f.apply(this.A);
            }
        }
        {
            Function<List<PathDatasetComponentBlob>,Void> f = v -> {v.stream().forEach(s -> s.preVisitDeep(visitor)); return null;};
            if (f != null) {
                f.apply(this.B);
            }
        }
    }

    public PathDatasetDiff postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public PathDatasetDiff postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<List<PathDatasetComponentBlob>,List<PathDatasetComponentBlob>> f = v -> v.stream().map(s -> s.postVisitDeep(visitor)).collect(Collectors.toList());
            if (f != null) {
                this.A = f.apply(this.A);
            }
        }
        {
            Function<List<PathDatasetComponentBlob>,List<PathDatasetComponentBlob>> f = v -> v.stream().map(s -> s.postVisitDeep(visitor)).collect(Collectors.toList());
            if (f != null) {
                this.B = f.apply(this.B);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
