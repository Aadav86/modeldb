// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class PathDatasetDiff {
    public List<PathDatasetComponentBlob> A;
    public List<PathDatasetComponentBlob> B;

    public PathDatasetDiff() {
        this.A = null;
        this.B = null;
    }

    public PathDatasetDiff setA(List<PathDatasetComponentBlob> value) {
        this.A = value;
        return this;
    }
    public PathDatasetDiff setB(List<PathDatasetComponentBlob> value) {
        this.B = value;
        return this;
    }

    static public PathDatasetDiff fromProto(ai.verta.modeldb.versioning.PathDatasetDiff blob) {
        if (blob == null) {
            return null;
        }

        PathDatasetDiff obj = new PathDatasetDiff();
        {
            Function<ai.verta.modeldb.versioning.PathDatasetDiff,List<PathDatasetComponentBlob>> f = x -> blob.getAList().stream().map(PathDatasetComponentBlob::fromProto).collect(Collectors.toList());
            obj.A = f.apply(blob);
        }
        {
            Function<ai.verta.modeldb.versioning.PathDatasetDiff,List<PathDatasetComponentBlob>> f = x -> blob.getBList().stream().map(PathDatasetComponentBlob::fromProto).collect(Collectors.toList());
            obj.B = f.apply(blob);
        }
        return obj;
    }

    public ai.verta.modeldb.versioning.PathDatasetDiff.Builder toProto() {
        ai.verta.modeldb.versioning.PathDatasetDiff.Builder builder = ai.verta.modeldb.versioning.PathDatasetDiff.newBuilder();
        {
            if (this.A != null) {
                Function<ai.verta.modeldb.versioning.PathDatasetDiff.Builder,Void> f = x -> { builder.addAllA(this.A.stream().map(y -> y.toProto().build()).collect(Collectors.toList())); return null; };
                f.apply(builder);
            }
        }
        {
            if (this.B != null) {
                Function<ai.verta.modeldb.versioning.PathDatasetDiff.Builder,Void> f = x -> { builder.addAllB(this.B.stream().map(y -> y.toProto().build()).collect(Collectors.toList())); return null; };
                f.apply(builder);
            }
        }
        return builder;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisitPathDatasetDiff(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        visitor.preVisitDeepListOfPathDatasetComponentBlob(this.A);
        visitor.preVisitDeepListOfPathDatasetComponentBlob(this.B);
    }

    public PathDatasetDiff postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisitPathDatasetDiff(this);
    }

    public PathDatasetDiff postVisitDeep(Visitor visitor) throws ModelDBException {
        this.A = visitor.postVisitDeepListOfPathDatasetComponentBlob(this.A);
        this.B = visitor.postVisitDeepListOfPathDatasetComponentBlob(this.B);
        return this.postVisitShallow(visitor);
    }
}
