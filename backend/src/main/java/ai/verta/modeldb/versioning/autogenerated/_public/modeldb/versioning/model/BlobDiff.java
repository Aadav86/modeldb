// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class BlobDiff {
    public List<String> Location;
    public DiffStatusEnumDiffStatus Status;
    public DatasetDiff Dataset;
    public EnvironmentDiff Environment;
    public CodeDiff Code;
    public ConfigDiff Config;

    public BlobDiff() {
        this.Location = null;
        this.Status = null;
        this.Dataset = null;
        this.Environment = null;
        this.Code = null;
        this.Config = null;
    }

    public BlobDiff setLocation(List<String> value) {
        this.Location = value;
        return this;
    }
    public BlobDiff setStatus(DiffStatusEnumDiffStatus value) {
        this.Status = value;
        return this;
    }
    public BlobDiff setDataset(DatasetDiff value) {
        this.Dataset = value;
        return this;
    }
    public BlobDiff setEnvironment(EnvironmentDiff value) {
        this.Environment = value;
        return this;
    }
    public BlobDiff setCode(CodeDiff value) {
        this.Code = value;
        return this;
    }
    public BlobDiff setConfig(ConfigDiff value) {
        this.Config = value;
        return this;
    }

    static public BlobDiff fromProto(ai.verta.modeldb.versioning.BlobDiff blob) {
        BlobDiff obj = new BlobDiff();
        {
            Function<List<String>,List<String>> f = null;
            if (f != null) {
                obj.Location = f.apply(null);
            }
        }
        {
            Function<Void,DiffStatusEnumDiffStatus> f = x -> DiffStatusEnumDiffStatus.fromProto(blob.getStatus());
            if (f != null) {
                obj.Status = f.apply(null);
            }
        }
        {
            Function<Void,DatasetDiff> f = x -> DatasetDiff.fromProto(blob.getDataset());
            if (f != null) {
                obj.Dataset = f.apply(null);
            }
        }
        {
            Function<Void,EnvironmentDiff> f = x -> EnvironmentDiff.fromProto(blob.getEnvironment());
            if (f != null) {
                obj.Environment = f.apply(null);
            }
        }
        {
            Function<Void,CodeDiff> f = x -> CodeDiff.fromProto(blob.getCode());
            if (f != null) {
                obj.Code = f.apply(null);
            }
        }
        {
            Function<Void,ConfigDiff> f = x -> ConfigDiff.fromProto(blob.getConfig());
            if (f != null) {
                obj.Config = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<List<String>,Void> f = v -> {v.stream().forEach(s -> s.preVisitDeep(visitor)); return null;};
            if (f != null) {
                f.apply(this.Location);
            }
        }
        {
            Function<DiffStatusEnumDiffStatus,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Status);
            }
        }
        {
            Function<DatasetDiff,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Dataset);
            }
        }
        {
            Function<EnvironmentDiff,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Environment);
            }
        }
        {
            Function<CodeDiff,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Code);
            }
        }
        {
            Function<ConfigDiff,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Config);
            }
        }
    }

    public BlobDiff postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public BlobDiff postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<List<String>,List<String>> f = v -> v.stream().map(s -> s.postVisitDeep(visitor)).collect(Collectors.toList());
            if (f != null) {
                this.Location = f.apply(this.Location);
            }
        }
        {
            Function<DiffStatusEnumDiffStatus,DiffStatusEnumDiffStatus> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Status = f.apply(this.Status);
            }
        }
        {
            Function<DatasetDiff,DatasetDiff> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Dataset = f.apply(this.Dataset);
            }
        }
        {
            Function<EnvironmentDiff,EnvironmentDiff> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Environment = f.apply(this.Environment);
            }
        }
        {
            Function<CodeDiff,CodeDiff> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Code = f.apply(this.Code);
            }
        }
        {
            Function<ConfigDiff,ConfigDiff> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Config = f.apply(this.Config);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
