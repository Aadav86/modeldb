// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class ContinuousHyperparameterSetConfigBlob {
    public HyperparameterValuesConfigBlob IntervalBegin;
    public HyperparameterValuesConfigBlob IntervalEnd;
    public HyperparameterValuesConfigBlob IntervalStep;

    public ContinuousHyperparameterSetConfigBlob() {
        this.IntervalBegin = null;
        this.IntervalEnd = null;
        this.IntervalStep = null;
    }

    public ContinuousHyperparameterSetConfigBlob setIntervalBegin(HyperparameterValuesConfigBlob value) {
        this.IntervalBegin = value;
        return this;
    }
    public ContinuousHyperparameterSetConfigBlob setIntervalEnd(HyperparameterValuesConfigBlob value) {
        this.IntervalEnd = value;
        return this;
    }
    public ContinuousHyperparameterSetConfigBlob setIntervalStep(HyperparameterValuesConfigBlob value) {
        this.IntervalStep = value;
        return this;
    }

    static public ContinuousHyperparameterSetConfigBlob fromProto(ai.verta.modeldb.versioning.ContinuousHyperparameterSetConfigBlob blob) {
        ContinuousHyperparameterSetConfigBlob obj = new ContinuousHyperparameterSetConfigBlob();
        {
            Function<Void,HyperparameterValuesConfigBlob> f = x -> HyperparameterValuesConfigBlob.fromProto(blob.getIntervalBegin());
            if (f != null) {
                obj.IntervalBegin = f.apply(null);
            }
        }
        {
            Function<Void,HyperparameterValuesConfigBlob> f = x -> HyperparameterValuesConfigBlob.fromProto(blob.getIntervalEnd());
            if (f != null) {
                obj.IntervalEnd = f.apply(null);
            }
        }
        {
            Function<Void,HyperparameterValuesConfigBlob> f = x -> HyperparameterValuesConfigBlob.fromProto(blob.getIntervalStep());
            if (f != null) {
                obj.IntervalStep = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<HyperparameterValuesConfigBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.IntervalBegin);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.IntervalEnd);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.IntervalStep);
            }
        }
    }

    public ContinuousHyperparameterSetConfigBlob postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public ContinuousHyperparameterSetConfigBlob postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<HyperparameterValuesConfigBlob,HyperparameterValuesConfigBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.IntervalBegin = f.apply(this.IntervalBegin);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,HyperparameterValuesConfigBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.IntervalEnd = f.apply(this.IntervalEnd);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,HyperparameterValuesConfigBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.IntervalStep = f.apply(this.IntervalStep);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
