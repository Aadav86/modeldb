// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class HyperparameterConfigBlob {
    public String Name;
    public HyperparameterValuesConfigBlob Value;

    public HyperparameterConfigBlob() {
        this.Name = null;
        this.Value = null;
    }

    public HyperparameterConfigBlob setName(String value) {
        this.Name = value;
        return this;
    }
    public HyperparameterConfigBlob setValue(HyperparameterValuesConfigBlob value) {
        this.Value = value;
        return this;
    }

    static public HyperparameterConfigBlob fromProto(ai.verta.modeldb.versioning.HyperparameterConfigBlob blob) {
        HyperparameterConfigBlob obj = new HyperparameterConfigBlob();
        {
            Function<String,String> f = null;
            if (f != null) {
                obj.Name = f.apply(null);
            }
        }
        {
            Function<Void,HyperparameterValuesConfigBlob> f = x -> HyperparameterValuesConfigBlob.fromProto(blob.getValue());
            if (f != null) {
                obj.Value = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<String,Void> f = null;
            if (f != null) {
                f.apply(this.Name);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Value);
            }
        }
    }

    public HyperparameterConfigBlob postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public HyperparameterConfigBlob postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<String,String> f = null;
            if (f != null) {
                this.Name = f.apply(this.Name);
            }
        }
        {
            Function<HyperparameterValuesConfigBlob,HyperparameterValuesConfigBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Value = f.apply(this.Value);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
