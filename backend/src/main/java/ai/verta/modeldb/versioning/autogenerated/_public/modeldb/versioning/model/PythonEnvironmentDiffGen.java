// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.diff.Function3;
import ai.verta.modeldb.versioning.blob.diff.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import com.pholser.junit.quickcheck.generator.*;
import com.pholser.junit.quickcheck.generator.java.util.*;
import com.pholser.junit.quickcheck.random.*;

public class PythonEnvironmentDiffGen extends Generator<PythonEnvironmentDiff> {
    public PythonEnvironmentDiffGen() {
        super(PythonEnvironmentDiff.class);
    }

    @Override public PythonEnvironmentDiff generate(
            SourceOfRandomness r,
            GenerationStatus status) {
                // if (r.nextBoolean())
                //     return null;

                PythonEnvironmentDiff obj = new PythonEnvironmentDiff();
                if (r.nextBoolean()) {
                    obj.setVersion(Utils.removeEmpty(gen().type(VersionEnvironmentDiff.class).generate(r, status)));
                }
                if (r.nextBoolean()) {
                    int size = r.nextInt(0, 10);
                    List<PythonRequirementEnvironmentDiff> ret = new ArrayList(size);
                    for (int i = 0; i < size; i++) {
                        ret.add(gen().type(PythonRequirementEnvironmentDiff.class).generate(r, status));
                    }
                    obj.setRequirements(Utils.removeEmpty(ret));
                }
                if (r.nextBoolean()) {
                    int size = r.nextInt(0, 10);
                    List<PythonRequirementEnvironmentDiff> ret = new ArrayList(size);
                    for (int i = 0; i < size; i++) {
                        ret.add(gen().type(PythonRequirementEnvironmentDiff.class).generate(r, status));
                    }
                    obj.setConstraints(Utils.removeEmpty(ret));
                }
                return obj;
    }
}
