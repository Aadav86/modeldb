// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class DatasetBlob {
    public S3DatasetBlob S3;
    public PathDatasetBlob Path;

    public DatasetBlob() {
        this.S3 = null;
        this.Path = null;
    }

    public DatasetBlob setS3(S3DatasetBlob value) {
        this.S3 = value;
        return this;
    }
    public DatasetBlob setPath(PathDatasetBlob value) {
        this.Path = value;
        return this;
    }

    static public DatasetBlob fromProto(ai.verta.modeldb.versioning.DatasetBlob blob) {
        DatasetBlob obj = new DatasetBlob();
        {
            Function<Void,S3DatasetBlob> f = x -> S3DatasetBlob.fromProto(blob.getS3());
            if (f != null) {
                obj.S3 = f.apply(null);
            }
        }
        {
            Function<Void,PathDatasetBlob> f = x -> PathDatasetBlob.fromProto(blob.getPath());
            if (f != null) {
                obj.Path = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<S3DatasetBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.S3);
            }
        }
        {
            Function<PathDatasetBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Path);
            }
        }
    }

    public DatasetBlob postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public DatasetBlob postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<S3DatasetBlob,S3DatasetBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.S3 = f.apply(this.S3);
            }
        }
        {
            Function<PathDatasetBlob,PathDatasetBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Path = f.apply(this.Path);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
