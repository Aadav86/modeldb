// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class CodeBlob {
    public GitCodeBlob Git;
    public NotebookCodeBlob Notebook;

    public CodeBlob() {
        this.Git = null;
        this.Notebook = null;
    }

    public CodeBlob setGit(GitCodeBlob value) {
        this.Git = value;
        return this;
    }
    public CodeBlob setNotebook(NotebookCodeBlob value) {
        this.Notebook = value;
        return this;
    }

    static public CodeBlob fromProto(ai.verta.modeldb.versioning.CodeBlob blob) {
        CodeBlob obj = new CodeBlob();
        {
            Function<Void,GitCodeBlob> f = x -> GitCodeBlob.fromProto(blob.getGit());
            if (f != null) {
                obj.Git = f.apply(null);
            }
        }
        {
            Function<Void,NotebookCodeBlob> f = x -> NotebookCodeBlob.fromProto(blob.getNotebook());
            if (f != null) {
                obj.Notebook = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<GitCodeBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Git);
            }
        }
        {
            Function<NotebookCodeBlob,Void> f = v -> {v.preVisitDeep(visitor); return null;};
            if (f != null) {
                f.apply(this.Notebook);
            }
        }
    }

    public CodeBlob postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public CodeBlob postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<GitCodeBlob,GitCodeBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Git = f.apply(this.Git);
            }
        }
        {
            Function<NotebookCodeBlob,NotebookCodeBlob> f = v -> v.postVisitDeep(visitor);
            if (f != null) {
                this.Notebook = f.apply(this.Notebook);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
