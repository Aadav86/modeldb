package ai.verta.modeldb.versioning.blob.visitors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.*;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Visitor {
    public void preVisitListOfBlob(List<Blob> lst) throws ModelDBException {
        for (Blob val : lst) {
            preVisitBlob(val);
        }
    }

    public void preVisitDeepListOfBlob(List<Blob> lst) throws ModelDBException {
        for (Blob val : lst) {
            preVisitDeepBlob(val);
        }
    }

    public List<Blob> postVisitListOfBlob(List<Blob> lst) throws ModelDBException {
        final List<Blob> collect = new ArrayList<>(lst.size());
        for (Blob val : lst) {
            collect.add(postVisitBlob(val));
        }
        return collect;
    }

    public List<Blob> postVisitDeepListOfBlob(List<Blob> lst) throws ModelDBException {
        final List<Blob> collect = new ArrayList<>(lst.size());
        for (Blob val : lst) {
            collect.add(postVisitDeepBlob(val));
        }
        return collect;
    }

    public void preVisitBlob(Blob blob) throws ModelDBException {}
    public void preVisitDeepBlob(Blob blob) throws ModelDBException {}
    public Blob postVisitBlob(Blob blob) throws ModelDBException { return blob; }
    public Blob postVisitDeepBlob(Blob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfCodeBlob(List<CodeBlob> lst) throws ModelDBException {
        for (CodeBlob val : lst) {
            preVisitCodeBlob(val);
        }
    }

    public void preVisitDeepListOfCodeBlob(List<CodeBlob> lst) throws ModelDBException {
        for (CodeBlob val : lst) {
            preVisitDeepCodeBlob(val);
        }
    }

    public List<CodeBlob> postVisitListOfCodeBlob(List<CodeBlob> lst) throws ModelDBException {
        final List<CodeBlob> collect = new ArrayList<>(lst.size());
        for (CodeBlob val : lst) {
            collect.add(postVisitCodeBlob(val));
        }
        return collect;
    }

    public List<CodeBlob> postVisitDeepListOfCodeBlob(List<CodeBlob> lst) throws ModelDBException {
        final List<CodeBlob> collect = new ArrayList<>(lst.size());
        for (CodeBlob val : lst) {
            collect.add(postVisitDeepCodeBlob(val));
        }
        return collect;
    }

    public void preVisitCodeBlob(CodeBlob blob) throws ModelDBException {}
    public void preVisitDeepCodeBlob(CodeBlob blob) throws ModelDBException {}
    public CodeBlob postVisitCodeBlob(CodeBlob blob) throws ModelDBException { return blob; }
    public CodeBlob postVisitDeepCodeBlob(CodeBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfConfigBlob(List<ConfigBlob> lst) throws ModelDBException {
        for (ConfigBlob val : lst) {
            preVisitConfigBlob(val);
        }
    }

    public void preVisitDeepListOfConfigBlob(List<ConfigBlob> lst) throws ModelDBException {
        for (ConfigBlob val : lst) {
            preVisitDeepConfigBlob(val);
        }
    }

    public List<ConfigBlob> postVisitListOfConfigBlob(List<ConfigBlob> lst) throws ModelDBException {
        final List<ConfigBlob> collect = new ArrayList<>(lst.size());
        for (ConfigBlob val : lst) {
            collect.add(postVisitConfigBlob(val));
        }
        return collect;
    }

    public List<ConfigBlob> postVisitDeepListOfConfigBlob(List<ConfigBlob> lst) throws ModelDBException {
        final List<ConfigBlob> collect = new ArrayList<>(lst.size());
        for (ConfigBlob val : lst) {
            collect.add(postVisitDeepConfigBlob(val));
        }
        return collect;
    }

    public void preVisitConfigBlob(ConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepConfigBlob(ConfigBlob blob) throws ModelDBException {}
    public ConfigBlob postVisitConfigBlob(ConfigBlob blob) throws ModelDBException { return blob; }
    public ConfigBlob postVisitDeepConfigBlob(ConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfContinuousHyperparameterSetConfigBlob(List<ContinuousHyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (ContinuousHyperparameterSetConfigBlob val : lst) {
            preVisitContinuousHyperparameterSetConfigBlob(val);
        }
    }

    public void preVisitDeepListOfContinuousHyperparameterSetConfigBlob(List<ContinuousHyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (ContinuousHyperparameterSetConfigBlob val : lst) {
            preVisitDeepContinuousHyperparameterSetConfigBlob(val);
        }
    }

    public List<ContinuousHyperparameterSetConfigBlob> postVisitListOfContinuousHyperparameterSetConfigBlob(List<ContinuousHyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<ContinuousHyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (ContinuousHyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitContinuousHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public List<ContinuousHyperparameterSetConfigBlob> postVisitDeepListOfContinuousHyperparameterSetConfigBlob(List<ContinuousHyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<ContinuousHyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (ContinuousHyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitDeepContinuousHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public void preVisitContinuousHyperparameterSetConfigBlob(ContinuousHyperparameterSetConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepContinuousHyperparameterSetConfigBlob(ContinuousHyperparameterSetConfigBlob blob) throws ModelDBException {}
    public ContinuousHyperparameterSetConfigBlob postVisitContinuousHyperparameterSetConfigBlob(ContinuousHyperparameterSetConfigBlob blob) throws ModelDBException { return blob; }
    public ContinuousHyperparameterSetConfigBlob postVisitDeepContinuousHyperparameterSetConfigBlob(ContinuousHyperparameterSetConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfDatasetBlob(List<DatasetBlob> lst) throws ModelDBException {
        for (DatasetBlob val : lst) {
            preVisitDatasetBlob(val);
        }
    }

    public void preVisitDeepListOfDatasetBlob(List<DatasetBlob> lst) throws ModelDBException {
        for (DatasetBlob val : lst) {
            preVisitDeepDatasetBlob(val);
        }
    }

    public List<DatasetBlob> postVisitListOfDatasetBlob(List<DatasetBlob> lst) throws ModelDBException {
        final List<DatasetBlob> collect = new ArrayList<>(lst.size());
        for (DatasetBlob val : lst) {
            collect.add(postVisitDatasetBlob(val));
        }
        return collect;
    }

    public List<DatasetBlob> postVisitDeepListOfDatasetBlob(List<DatasetBlob> lst) throws ModelDBException {
        final List<DatasetBlob> collect = new ArrayList<>(lst.size());
        for (DatasetBlob val : lst) {
            collect.add(postVisitDeepDatasetBlob(val));
        }
        return collect;
    }

    public void preVisitDatasetBlob(DatasetBlob blob) throws ModelDBException {}
    public void preVisitDeepDatasetBlob(DatasetBlob blob) throws ModelDBException {}
    public DatasetBlob postVisitDatasetBlob(DatasetBlob blob) throws ModelDBException { return blob; }
    public DatasetBlob postVisitDeepDatasetBlob(DatasetBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfDiscreteHyperparameterSetConfigBlob(List<DiscreteHyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (DiscreteHyperparameterSetConfigBlob val : lst) {
            preVisitDiscreteHyperparameterSetConfigBlob(val);
        }
    }

    public void preVisitDeepListOfDiscreteHyperparameterSetConfigBlob(List<DiscreteHyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (DiscreteHyperparameterSetConfigBlob val : lst) {
            preVisitDeepDiscreteHyperparameterSetConfigBlob(val);
        }
    }

    public List<DiscreteHyperparameterSetConfigBlob> postVisitListOfDiscreteHyperparameterSetConfigBlob(List<DiscreteHyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<DiscreteHyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (DiscreteHyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitDiscreteHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public List<DiscreteHyperparameterSetConfigBlob> postVisitDeepListOfDiscreteHyperparameterSetConfigBlob(List<DiscreteHyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<DiscreteHyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (DiscreteHyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitDeepDiscreteHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public void preVisitDiscreteHyperparameterSetConfigBlob(DiscreteHyperparameterSetConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepDiscreteHyperparameterSetConfigBlob(DiscreteHyperparameterSetConfigBlob blob) throws ModelDBException {}
    public DiscreteHyperparameterSetConfigBlob postVisitDiscreteHyperparameterSetConfigBlob(DiscreteHyperparameterSetConfigBlob blob) throws ModelDBException { return blob; }
    public DiscreteHyperparameterSetConfigBlob postVisitDeepDiscreteHyperparameterSetConfigBlob(DiscreteHyperparameterSetConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfDockerEnvironmentBlob(List<DockerEnvironmentBlob> lst) throws ModelDBException {
        for (DockerEnvironmentBlob val : lst) {
            preVisitDockerEnvironmentBlob(val);
        }
    }

    public void preVisitDeepListOfDockerEnvironmentBlob(List<DockerEnvironmentBlob> lst) throws ModelDBException {
        for (DockerEnvironmentBlob val : lst) {
            preVisitDeepDockerEnvironmentBlob(val);
        }
    }

    public List<DockerEnvironmentBlob> postVisitListOfDockerEnvironmentBlob(List<DockerEnvironmentBlob> lst) throws ModelDBException {
        final List<DockerEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (DockerEnvironmentBlob val : lst) {
            collect.add(postVisitDockerEnvironmentBlob(val));
        }
        return collect;
    }

    public List<DockerEnvironmentBlob> postVisitDeepListOfDockerEnvironmentBlob(List<DockerEnvironmentBlob> lst) throws ModelDBException {
        final List<DockerEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (DockerEnvironmentBlob val : lst) {
            collect.add(postVisitDeepDockerEnvironmentBlob(val));
        }
        return collect;
    }

    public void preVisitDockerEnvironmentBlob(DockerEnvironmentBlob blob) throws ModelDBException {}
    public void preVisitDeepDockerEnvironmentBlob(DockerEnvironmentBlob blob) throws ModelDBException {}
    public DockerEnvironmentBlob postVisitDockerEnvironmentBlob(DockerEnvironmentBlob blob) throws ModelDBException { return blob; }
    public DockerEnvironmentBlob postVisitDeepDockerEnvironmentBlob(DockerEnvironmentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfEnvironmentBlob(List<EnvironmentBlob> lst) throws ModelDBException {
        for (EnvironmentBlob val : lst) {
            preVisitEnvironmentBlob(val);
        }
    }

    public void preVisitDeepListOfEnvironmentBlob(List<EnvironmentBlob> lst) throws ModelDBException {
        for (EnvironmentBlob val : lst) {
            preVisitDeepEnvironmentBlob(val);
        }
    }

    public List<EnvironmentBlob> postVisitListOfEnvironmentBlob(List<EnvironmentBlob> lst) throws ModelDBException {
        final List<EnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (EnvironmentBlob val : lst) {
            collect.add(postVisitEnvironmentBlob(val));
        }
        return collect;
    }

    public List<EnvironmentBlob> postVisitDeepListOfEnvironmentBlob(List<EnvironmentBlob> lst) throws ModelDBException {
        final List<EnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (EnvironmentBlob val : lst) {
            collect.add(postVisitDeepEnvironmentBlob(val));
        }
        return collect;
    }

    public void preVisitEnvironmentBlob(EnvironmentBlob blob) throws ModelDBException {}
    public void preVisitDeepEnvironmentBlob(EnvironmentBlob blob) throws ModelDBException {}
    public EnvironmentBlob postVisitEnvironmentBlob(EnvironmentBlob blob) throws ModelDBException { return blob; }
    public EnvironmentBlob postVisitDeepEnvironmentBlob(EnvironmentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfEnvironmentVariablesBlob(List<EnvironmentVariablesBlob> lst) throws ModelDBException {
        for (EnvironmentVariablesBlob val : lst) {
            preVisitEnvironmentVariablesBlob(val);
        }
    }

    public void preVisitDeepListOfEnvironmentVariablesBlob(List<EnvironmentVariablesBlob> lst) throws ModelDBException {
        for (EnvironmentVariablesBlob val : lst) {
            preVisitDeepEnvironmentVariablesBlob(val);
        }
    }

    public List<EnvironmentVariablesBlob> postVisitListOfEnvironmentVariablesBlob(List<EnvironmentVariablesBlob> lst) throws ModelDBException {
        final List<EnvironmentVariablesBlob> collect = new ArrayList<>(lst.size());
        for (EnvironmentVariablesBlob val : lst) {
            collect.add(postVisitEnvironmentVariablesBlob(val));
        }
        return collect;
    }

    public List<EnvironmentVariablesBlob> postVisitDeepListOfEnvironmentVariablesBlob(List<EnvironmentVariablesBlob> lst) throws ModelDBException {
        final List<EnvironmentVariablesBlob> collect = new ArrayList<>(lst.size());
        for (EnvironmentVariablesBlob val : lst) {
            collect.add(postVisitDeepEnvironmentVariablesBlob(val));
        }
        return collect;
    }

    public void preVisitEnvironmentVariablesBlob(EnvironmentVariablesBlob blob) throws ModelDBException {}
    public void preVisitDeepEnvironmentVariablesBlob(EnvironmentVariablesBlob blob) throws ModelDBException {}
    public EnvironmentVariablesBlob postVisitEnvironmentVariablesBlob(EnvironmentVariablesBlob blob) throws ModelDBException { return blob; }
    public EnvironmentVariablesBlob postVisitDeepEnvironmentVariablesBlob(EnvironmentVariablesBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfGitCodeBlob(List<GitCodeBlob> lst) throws ModelDBException {
        for (GitCodeBlob val : lst) {
            preVisitGitCodeBlob(val);
        }
    }

    public void preVisitDeepListOfGitCodeBlob(List<GitCodeBlob> lst) throws ModelDBException {
        for (GitCodeBlob val : lst) {
            preVisitDeepGitCodeBlob(val);
        }
    }

    public List<GitCodeBlob> postVisitListOfGitCodeBlob(List<GitCodeBlob> lst) throws ModelDBException {
        final List<GitCodeBlob> collect = new ArrayList<>(lst.size());
        for (GitCodeBlob val : lst) {
            collect.add(postVisitGitCodeBlob(val));
        }
        return collect;
    }

    public List<GitCodeBlob> postVisitDeepListOfGitCodeBlob(List<GitCodeBlob> lst) throws ModelDBException {
        final List<GitCodeBlob> collect = new ArrayList<>(lst.size());
        for (GitCodeBlob val : lst) {
            collect.add(postVisitDeepGitCodeBlob(val));
        }
        return collect;
    }

    public void preVisitGitCodeBlob(GitCodeBlob blob) throws ModelDBException {}
    public void preVisitDeepGitCodeBlob(GitCodeBlob blob) throws ModelDBException {}
    public GitCodeBlob postVisitGitCodeBlob(GitCodeBlob blob) throws ModelDBException { return blob; }
    public GitCodeBlob postVisitDeepGitCodeBlob(GitCodeBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfHyperparameterConfigBlob(List<HyperparameterConfigBlob> lst) throws ModelDBException {
        for (HyperparameterConfigBlob val : lst) {
            preVisitHyperparameterConfigBlob(val);
        }
    }

    public void preVisitDeepListOfHyperparameterConfigBlob(List<HyperparameterConfigBlob> lst) throws ModelDBException {
        for (HyperparameterConfigBlob val : lst) {
            preVisitDeepHyperparameterConfigBlob(val);
        }
    }

    public List<HyperparameterConfigBlob> postVisitListOfHyperparameterConfigBlob(List<HyperparameterConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterConfigBlob val : lst) {
            collect.add(postVisitHyperparameterConfigBlob(val));
        }
        return collect;
    }

    public List<HyperparameterConfigBlob> postVisitDeepListOfHyperparameterConfigBlob(List<HyperparameterConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterConfigBlob val : lst) {
            collect.add(postVisitDeepHyperparameterConfigBlob(val));
        }
        return collect;
    }

    public void preVisitHyperparameterConfigBlob(HyperparameterConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepHyperparameterConfigBlob(HyperparameterConfigBlob blob) throws ModelDBException {}
    public HyperparameterConfigBlob postVisitHyperparameterConfigBlob(HyperparameterConfigBlob blob) throws ModelDBException { return blob; }
    public HyperparameterConfigBlob postVisitDeepHyperparameterConfigBlob(HyperparameterConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfHyperparameterSetConfigBlob(List<HyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (HyperparameterSetConfigBlob val : lst) {
            preVisitHyperparameterSetConfigBlob(val);
        }
    }

    public void preVisitDeepListOfHyperparameterSetConfigBlob(List<HyperparameterSetConfigBlob> lst) throws ModelDBException {
        for (HyperparameterSetConfigBlob val : lst) {
            preVisitDeepHyperparameterSetConfigBlob(val);
        }
    }

    public List<HyperparameterSetConfigBlob> postVisitListOfHyperparameterSetConfigBlob(List<HyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public List<HyperparameterSetConfigBlob> postVisitDeepListOfHyperparameterSetConfigBlob(List<HyperparameterSetConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterSetConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterSetConfigBlob val : lst) {
            collect.add(postVisitDeepHyperparameterSetConfigBlob(val));
        }
        return collect;
    }

    public void preVisitHyperparameterSetConfigBlob(HyperparameterSetConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepHyperparameterSetConfigBlob(HyperparameterSetConfigBlob blob) throws ModelDBException {}
    public HyperparameterSetConfigBlob postVisitHyperparameterSetConfigBlob(HyperparameterSetConfigBlob blob) throws ModelDBException { return blob; }
    public HyperparameterSetConfigBlob postVisitDeepHyperparameterSetConfigBlob(HyperparameterSetConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfHyperparameterValuesConfigBlob(List<HyperparameterValuesConfigBlob> lst) throws ModelDBException {
        for (HyperparameterValuesConfigBlob val : lst) {
            preVisitHyperparameterValuesConfigBlob(val);
        }
    }

    public void preVisitDeepListOfHyperparameterValuesConfigBlob(List<HyperparameterValuesConfigBlob> lst) throws ModelDBException {
        for (HyperparameterValuesConfigBlob val : lst) {
            preVisitDeepHyperparameterValuesConfigBlob(val);
        }
    }

    public List<HyperparameterValuesConfigBlob> postVisitListOfHyperparameterValuesConfigBlob(List<HyperparameterValuesConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterValuesConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterValuesConfigBlob val : lst) {
            collect.add(postVisitHyperparameterValuesConfigBlob(val));
        }
        return collect;
    }

    public List<HyperparameterValuesConfigBlob> postVisitDeepListOfHyperparameterValuesConfigBlob(List<HyperparameterValuesConfigBlob> lst) throws ModelDBException {
        final List<HyperparameterValuesConfigBlob> collect = new ArrayList<>(lst.size());
        for (HyperparameterValuesConfigBlob val : lst) {
            collect.add(postVisitDeepHyperparameterValuesConfigBlob(val));
        }
        return collect;
    }

    public void preVisitHyperparameterValuesConfigBlob(HyperparameterValuesConfigBlob blob) throws ModelDBException {}
    public void preVisitDeepHyperparameterValuesConfigBlob(HyperparameterValuesConfigBlob blob) throws ModelDBException {}
    public HyperparameterValuesConfigBlob postVisitHyperparameterValuesConfigBlob(HyperparameterValuesConfigBlob blob) throws ModelDBException { return blob; }
    public HyperparameterValuesConfigBlob postVisitDeepHyperparameterValuesConfigBlob(HyperparameterValuesConfigBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfNotebookCodeBlob(List<NotebookCodeBlob> lst) throws ModelDBException {
        for (NotebookCodeBlob val : lst) {
            preVisitNotebookCodeBlob(val);
        }
    }

    public void preVisitDeepListOfNotebookCodeBlob(List<NotebookCodeBlob> lst) throws ModelDBException {
        for (NotebookCodeBlob val : lst) {
            preVisitDeepNotebookCodeBlob(val);
        }
    }

    public List<NotebookCodeBlob> postVisitListOfNotebookCodeBlob(List<NotebookCodeBlob> lst) throws ModelDBException {
        final List<NotebookCodeBlob> collect = new ArrayList<>(lst.size());
        for (NotebookCodeBlob val : lst) {
            collect.add(postVisitNotebookCodeBlob(val));
        }
        return collect;
    }

    public List<NotebookCodeBlob> postVisitDeepListOfNotebookCodeBlob(List<NotebookCodeBlob> lst) throws ModelDBException {
        final List<NotebookCodeBlob> collect = new ArrayList<>(lst.size());
        for (NotebookCodeBlob val : lst) {
            collect.add(postVisitDeepNotebookCodeBlob(val));
        }
        return collect;
    }

    public void preVisitNotebookCodeBlob(NotebookCodeBlob blob) throws ModelDBException {}
    public void preVisitDeepNotebookCodeBlob(NotebookCodeBlob blob) throws ModelDBException {}
    public NotebookCodeBlob postVisitNotebookCodeBlob(NotebookCodeBlob blob) throws ModelDBException { return blob; }
    public NotebookCodeBlob postVisitDeepNotebookCodeBlob(NotebookCodeBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfPathDatasetBlob(List<PathDatasetBlob> lst) throws ModelDBException {
        for (PathDatasetBlob val : lst) {
            preVisitPathDatasetBlob(val);
        }
    }

    public void preVisitDeepListOfPathDatasetBlob(List<PathDatasetBlob> lst) throws ModelDBException {
        for (PathDatasetBlob val : lst) {
            preVisitDeepPathDatasetBlob(val);
        }
    }

    public List<PathDatasetBlob> postVisitListOfPathDatasetBlob(List<PathDatasetBlob> lst) throws ModelDBException {
        final List<PathDatasetBlob> collect = new ArrayList<>(lst.size());
        for (PathDatasetBlob val : lst) {
            collect.add(postVisitPathDatasetBlob(val));
        }
        return collect;
    }

    public List<PathDatasetBlob> postVisitDeepListOfPathDatasetBlob(List<PathDatasetBlob> lst) throws ModelDBException {
        final List<PathDatasetBlob> collect = new ArrayList<>(lst.size());
        for (PathDatasetBlob val : lst) {
            collect.add(postVisitDeepPathDatasetBlob(val));
        }
        return collect;
    }

    public void preVisitPathDatasetBlob(PathDatasetBlob blob) throws ModelDBException {}
    public void preVisitDeepPathDatasetBlob(PathDatasetBlob blob) throws ModelDBException {}
    public PathDatasetBlob postVisitPathDatasetBlob(PathDatasetBlob blob) throws ModelDBException { return blob; }
    public PathDatasetBlob postVisitDeepPathDatasetBlob(PathDatasetBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfPathDatasetComponentBlob(List<PathDatasetComponentBlob> lst) throws ModelDBException {
        for (PathDatasetComponentBlob val : lst) {
            preVisitPathDatasetComponentBlob(val);
        }
    }

    public void preVisitDeepListOfPathDatasetComponentBlob(List<PathDatasetComponentBlob> lst) throws ModelDBException {
        for (PathDatasetComponentBlob val : lst) {
            preVisitDeepPathDatasetComponentBlob(val);
        }
    }

    public List<PathDatasetComponentBlob> postVisitListOfPathDatasetComponentBlob(List<PathDatasetComponentBlob> lst) throws ModelDBException {
        final List<PathDatasetComponentBlob> collect = new ArrayList<>(lst.size());
        for (PathDatasetComponentBlob val : lst) {
            collect.add(postVisitPathDatasetComponentBlob(val));
        }
        return collect;
    }

    public List<PathDatasetComponentBlob> postVisitDeepListOfPathDatasetComponentBlob(List<PathDatasetComponentBlob> lst) throws ModelDBException {
        final List<PathDatasetComponentBlob> collect = new ArrayList<>(lst.size());
        for (PathDatasetComponentBlob val : lst) {
            collect.add(postVisitDeepPathDatasetComponentBlob(val));
        }
        return collect;
    }

    public void preVisitPathDatasetComponentBlob(PathDatasetComponentBlob blob) throws ModelDBException {}
    public void preVisitDeepPathDatasetComponentBlob(PathDatasetComponentBlob blob) throws ModelDBException {}
    public PathDatasetComponentBlob postVisitPathDatasetComponentBlob(PathDatasetComponentBlob blob) throws ModelDBException { return blob; }
    public PathDatasetComponentBlob postVisitDeepPathDatasetComponentBlob(PathDatasetComponentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfPythonEnvironmentBlob(List<PythonEnvironmentBlob> lst) throws ModelDBException {
        for (PythonEnvironmentBlob val : lst) {
            preVisitPythonEnvironmentBlob(val);
        }
    }

    public void preVisitDeepListOfPythonEnvironmentBlob(List<PythonEnvironmentBlob> lst) throws ModelDBException {
        for (PythonEnvironmentBlob val : lst) {
            preVisitDeepPythonEnvironmentBlob(val);
        }
    }

    public List<PythonEnvironmentBlob> postVisitListOfPythonEnvironmentBlob(List<PythonEnvironmentBlob> lst) throws ModelDBException {
        final List<PythonEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (PythonEnvironmentBlob val : lst) {
            collect.add(postVisitPythonEnvironmentBlob(val));
        }
        return collect;
    }

    public List<PythonEnvironmentBlob> postVisitDeepListOfPythonEnvironmentBlob(List<PythonEnvironmentBlob> lst) throws ModelDBException {
        final List<PythonEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (PythonEnvironmentBlob val : lst) {
            collect.add(postVisitDeepPythonEnvironmentBlob(val));
        }
        return collect;
    }

    public void preVisitPythonEnvironmentBlob(PythonEnvironmentBlob blob) throws ModelDBException {}
    public void preVisitDeepPythonEnvironmentBlob(PythonEnvironmentBlob blob) throws ModelDBException {}
    public PythonEnvironmentBlob postVisitPythonEnvironmentBlob(PythonEnvironmentBlob blob) throws ModelDBException { return blob; }
    public PythonEnvironmentBlob postVisitDeepPythonEnvironmentBlob(PythonEnvironmentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfPythonRequirementEnvironmentBlob(List<PythonRequirementEnvironmentBlob> lst) throws ModelDBException {
        for (PythonRequirementEnvironmentBlob val : lst) {
            preVisitPythonRequirementEnvironmentBlob(val);
        }
    }

    public void preVisitDeepListOfPythonRequirementEnvironmentBlob(List<PythonRequirementEnvironmentBlob> lst) throws ModelDBException {
        for (PythonRequirementEnvironmentBlob val : lst) {
            preVisitDeepPythonRequirementEnvironmentBlob(val);
        }
    }

    public List<PythonRequirementEnvironmentBlob> postVisitListOfPythonRequirementEnvironmentBlob(List<PythonRequirementEnvironmentBlob> lst) throws ModelDBException {
        final List<PythonRequirementEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (PythonRequirementEnvironmentBlob val : lst) {
            collect.add(postVisitPythonRequirementEnvironmentBlob(val));
        }
        return collect;
    }

    public List<PythonRequirementEnvironmentBlob> postVisitDeepListOfPythonRequirementEnvironmentBlob(List<PythonRequirementEnvironmentBlob> lst) throws ModelDBException {
        final List<PythonRequirementEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (PythonRequirementEnvironmentBlob val : lst) {
            collect.add(postVisitDeepPythonRequirementEnvironmentBlob(val));
        }
        return collect;
    }

    public void preVisitPythonRequirementEnvironmentBlob(PythonRequirementEnvironmentBlob blob) throws ModelDBException {}
    public void preVisitDeepPythonRequirementEnvironmentBlob(PythonRequirementEnvironmentBlob blob) throws ModelDBException {}
    public PythonRequirementEnvironmentBlob postVisitPythonRequirementEnvironmentBlob(PythonRequirementEnvironmentBlob blob) throws ModelDBException { return blob; }
    public PythonRequirementEnvironmentBlob postVisitDeepPythonRequirementEnvironmentBlob(PythonRequirementEnvironmentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfS3DatasetBlob(List<S3DatasetBlob> lst) throws ModelDBException {
        for (S3DatasetBlob val : lst) {
            preVisitS3DatasetBlob(val);
        }
    }

    public void preVisitDeepListOfS3DatasetBlob(List<S3DatasetBlob> lst) throws ModelDBException {
        for (S3DatasetBlob val : lst) {
            preVisitDeepS3DatasetBlob(val);
        }
    }

    public List<S3DatasetBlob> postVisitListOfS3DatasetBlob(List<S3DatasetBlob> lst) throws ModelDBException {
        final List<S3DatasetBlob> collect = new ArrayList<>(lst.size());
        for (S3DatasetBlob val : lst) {
            collect.add(postVisitS3DatasetBlob(val));
        }
        return collect;
    }

    public List<S3DatasetBlob> postVisitDeepListOfS3DatasetBlob(List<S3DatasetBlob> lst) throws ModelDBException {
        final List<S3DatasetBlob> collect = new ArrayList<>(lst.size());
        for (S3DatasetBlob val : lst) {
            collect.add(postVisitDeepS3DatasetBlob(val));
        }
        return collect;
    }

    public void preVisitS3DatasetBlob(S3DatasetBlob blob) throws ModelDBException {}
    public void preVisitDeepS3DatasetBlob(S3DatasetBlob blob) throws ModelDBException {}
    public S3DatasetBlob postVisitS3DatasetBlob(S3DatasetBlob blob) throws ModelDBException { return blob; }
    public S3DatasetBlob postVisitDeepS3DatasetBlob(S3DatasetBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfS3DatasetComponentBlob(List<S3DatasetComponentBlob> lst) throws ModelDBException {
        for (S3DatasetComponentBlob val : lst) {
            preVisitS3DatasetComponentBlob(val);
        }
    }

    public void preVisitDeepListOfS3DatasetComponentBlob(List<S3DatasetComponentBlob> lst) throws ModelDBException {
        for (S3DatasetComponentBlob val : lst) {
            preVisitDeepS3DatasetComponentBlob(val);
        }
    }

    public List<S3DatasetComponentBlob> postVisitListOfS3DatasetComponentBlob(List<S3DatasetComponentBlob> lst) throws ModelDBException {
        final List<S3DatasetComponentBlob> collect = new ArrayList<>(lst.size());
        for (S3DatasetComponentBlob val : lst) {
            collect.add(postVisitS3DatasetComponentBlob(val));
        }
        return collect;
    }

    public List<S3DatasetComponentBlob> postVisitDeepListOfS3DatasetComponentBlob(List<S3DatasetComponentBlob> lst) throws ModelDBException {
        final List<S3DatasetComponentBlob> collect = new ArrayList<>(lst.size());
        for (S3DatasetComponentBlob val : lst) {
            collect.add(postVisitDeepS3DatasetComponentBlob(val));
        }
        return collect;
    }

    public void preVisitS3DatasetComponentBlob(S3DatasetComponentBlob blob) throws ModelDBException {}
    public void preVisitDeepS3DatasetComponentBlob(S3DatasetComponentBlob blob) throws ModelDBException {}
    public S3DatasetComponentBlob postVisitS3DatasetComponentBlob(S3DatasetComponentBlob blob) throws ModelDBException { return blob; }
    public S3DatasetComponentBlob postVisitDeepS3DatasetComponentBlob(S3DatasetComponentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfVersionEnvironmentBlob(List<VersionEnvironmentBlob> lst) throws ModelDBException {
        for (VersionEnvironmentBlob val : lst) {
            preVisitVersionEnvironmentBlob(val);
        }
    }

    public void preVisitDeepListOfVersionEnvironmentBlob(List<VersionEnvironmentBlob> lst) throws ModelDBException {
        for (VersionEnvironmentBlob val : lst) {
            preVisitDeepVersionEnvironmentBlob(val);
        }
    }

    public List<VersionEnvironmentBlob> postVisitListOfVersionEnvironmentBlob(List<VersionEnvironmentBlob> lst) throws ModelDBException {
        final List<VersionEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (VersionEnvironmentBlob val : lst) {
            collect.add(postVisitVersionEnvironmentBlob(val));
        }
        return collect;
    }

    public List<VersionEnvironmentBlob> postVisitDeepListOfVersionEnvironmentBlob(List<VersionEnvironmentBlob> lst) throws ModelDBException {
        final List<VersionEnvironmentBlob> collect = new ArrayList<>(lst.size());
        for (VersionEnvironmentBlob val : lst) {
            collect.add(postVisitDeepVersionEnvironmentBlob(val));
        }
        return collect;
    }

    public void preVisitVersionEnvironmentBlob(VersionEnvironmentBlob blob) throws ModelDBException {}
    public void preVisitDeepVersionEnvironmentBlob(VersionEnvironmentBlob blob) throws ModelDBException {}
    public VersionEnvironmentBlob postVisitVersionEnvironmentBlob(VersionEnvironmentBlob blob) throws ModelDBException { return blob; }
    public VersionEnvironmentBlob postVisitDeepVersionEnvironmentBlob(VersionEnvironmentBlob blob) throws ModelDBException { return blob.postVisitDeep(this); }
    public void preVisitListOfString(List<String> lst) throws ModelDBException {
        for (String val : lst) {
            preVisitString(val);
        }
    }

    public void preVisitDeepListOfString(List<String> lst) throws ModelDBException {
        for (String val : lst) {
            preVisitDeepString(val);
        }
    }

    public List<String> postVisitListOfString(List<String> lst) throws ModelDBException {
        final List<String> collect = new ArrayList<>(lst.size());
        for (String val : lst) {
            collect.add(postVisitString(val));
        }
        return collect;
    }

    public List<String> postVisitDeepListOfString(List<String> lst) throws ModelDBException {
        final List<String> collect = new ArrayList<>(lst.size());
        for (String val : lst) {
            collect.add(postVisitDeepString(val));
        }
        return collect;
    }

    public void preVisitString(String blob) throws ModelDBException {}
    public void preVisitDeepString(String blob) throws ModelDBException {}
    public String postVisitString(String blob) throws ModelDBException { return blob; }
    public String postVisitDeepString(String blob) throws ModelDBException { return blob; }
    public void preVisitListOfBoolean(List<Boolean> lst) throws ModelDBException {
        for (Boolean val : lst) {
            preVisitBoolean(val);
        }
    }

    public void preVisitDeepListOfBoolean(List<Boolean> lst) throws ModelDBException {
        for (Boolean val : lst) {
            preVisitDeepBoolean(val);
        }
    }

    public List<Boolean> postVisitListOfBoolean(List<Boolean> lst) throws ModelDBException {
        final List<Boolean> collect = new ArrayList<>(lst.size());
        for (Boolean val : lst) {
            collect.add(postVisitBoolean(val));
        }
        return collect;
    }

    public List<Boolean> postVisitDeepListOfBoolean(List<Boolean> lst) throws ModelDBException {
        final List<Boolean> collect = new ArrayList<>(lst.size());
        for (Boolean val : lst) {
            collect.add(postVisitDeepBoolean(val));
        }
        return collect;
    }

    public void preVisitBoolean(Boolean blob) throws ModelDBException {}
    public void preVisitDeepBoolean(Boolean blob) throws ModelDBException {}
    public Boolean postVisitBoolean(Boolean blob) throws ModelDBException { return blob; }
    public Boolean postVisitDeepBoolean(Boolean blob) throws ModelDBException { return blob; }
    public void preVisitListOfDouble(List<Double> lst) throws ModelDBException {
        for (Double val : lst) {
            preVisitDouble(val);
        }
    }

    public void preVisitDeepListOfDouble(List<Double> lst) throws ModelDBException {
        for (Double val : lst) {
            preVisitDeepDouble(val);
        }
    }

    public List<Double> postVisitListOfDouble(List<Double> lst) throws ModelDBException {
        final List<Double> collect = new ArrayList<>(lst.size());
        for (Double val : lst) {
            collect.add(postVisitDouble(val));
        }
        return collect;
    }

    public List<Double> postVisitDeepListOfDouble(List<Double> lst) throws ModelDBException {
        final List<Double> collect = new ArrayList<>(lst.size());
        for (Double val : lst) {
            collect.add(postVisitDeepDouble(val));
        }
        return collect;
    }

    public void preVisitDouble(Double blob) throws ModelDBException {}
    public void preVisitDeepDouble(Double blob) throws ModelDBException {}
    public Double postVisitDouble(Double blob) throws ModelDBException { return blob; }
    public Double postVisitDeepDouble(Double blob) throws ModelDBException { return blob; }
    public void preVisitListOfInteger(List<Integer> lst) throws ModelDBException {
        for (Integer val : lst) {
            preVisitInteger(val);
        }
    }

    public void preVisitDeepListOfInteger(List<Integer> lst) throws ModelDBException {
        for (Integer val : lst) {
            preVisitDeepInteger(val);
        }
    }

    public List<Integer> postVisitListOfInteger(List<Integer> lst) throws ModelDBException {
        final List<Integer> collect = new ArrayList<>(lst.size());
        for (Integer val : lst) {
            collect.add(postVisitInteger(val));
        }
        return collect;
    }

    public List<Integer> postVisitDeepListOfInteger(List<Integer> lst) throws ModelDBException {
        final List<Integer> collect = new ArrayList<>(lst.size());
        for (Integer val : lst) {
            collect.add(postVisitDeepInteger(val));
        }
        return collect;
    }

    public void preVisitInteger(Integer blob) throws ModelDBException {}
    public void preVisitDeepInteger(Integer blob) throws ModelDBException {}
    public Integer postVisitInteger(Integer blob) throws ModelDBException { return blob; }
    public Integer postVisitDeepInteger(Integer blob) throws ModelDBException { return blob; }
}
