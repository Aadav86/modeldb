// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class S3DatasetBlob {
    public List<S3DatasetComponentBlob> Components;

    public S3DatasetBlob() {
        this.Components = null;
    }

    public S3DatasetBlob setComponents(List<S3DatasetComponentBlob> value) {
        this.Components = value;
        return this;
    }

    static public S3DatasetBlob fromProto(ai.verta.modeldb.versioning.S3DatasetBlob blob) {
        S3DatasetBlob obj = new S3DatasetBlob();
        {
            Function<List<S3DatasetComponentBlob>,List<S3DatasetComponentBlob>> f = null;
            if (f != null) {
                obj.Components = f.apply(null);
            }
        }
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {
            Function<List<S3DatasetComponentBlob>,Void> f = v -> {v.stream().forEach(s -> s.preVisitDeep(visitor)); return null;};
            if (f != null) {
                f.apply(this.Components);
            }
        }
    }

    public S3DatasetBlob postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit(this);
    }

    public S3DatasetBlob postVisitDeep(Visitor visitor) throws ModelDBException {
        {
            Function<List<S3DatasetComponentBlob>,List<S3DatasetComponentBlob>> f = v -> v.stream().map(s -> s.postVisitDeep(visitor)).collect(Collectors.toList());
            if (f != null) {
                this.Components = f.apply(this.Components);
            }
        }
        return this.postVisitShallow(visitor);
    }
}
