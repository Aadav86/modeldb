// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated.{{package}}.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class {{class_name}} {
    {{#properties}}
    {{^required}}
    public {{#type}}{{> type}}{{/type}} {{name}};
    {{/required}}
    {{/properties}}

    public {{class_name}}() {
        {{#properties}}
        {{^required}}
        this.{{name}} = {{#type}}{{> default_value}}{{/type}};
        {{/required}}
        {{/properties}}
    }

    {{#properties}}
    {{^required}}
    public {{class_name}} set{{name}}({{#type}}{{> type}}{{/type}} value) {
        this.{{name}} = value;
        return this;
    }
    {{/required}}
    {{/properties}}

    static public {{class_name}} fromProto(ai.verta.modeldb.versioning.{{class_name}} blob) {
        {{class_name}} obj = new {{class_name}}();
        {{#properties}}
        {{^required}}
        {
            Function<ai.verta.modeldb.versioning.{{class_name}},{{#type}}{{> type}}{{/type}}> f = x -> { return {{#type}}{{> fromproto}}{{/type}}(x.get{{name}}{{#type}}{{#is_list}}List{{/is_list}}{{/type}}()); };
            //{{#type}}{{> fromproto}}{{/type}};
            if (f != null) {
                obj.{{name}} = f.apply(blob);
            }
        }
        {{/required}}
        {{/properties}}
        return obj;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit{{class_name}}(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {{#properties}}
        {{^required}}
        visitor.preVisitDeep{{#type}}{{> visittype}}{{/type}}(this.{{name}});
        {{/required}}
        {{/properties}}
    }

    public {{class_name}} postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit{{class_name}}(this);
    }

    public {{class_name}} postVisitDeep(Visitor visitor) throws ModelDBException {
        {{#properties}}
        {{^required}}
        this.{{name}} = visitor.postVisitDeep{{#type}}{{> visittype}}{{/type}}(this.{{name}});
        {{/required}}
        {{/properties}}
        return this.postVisitShallow(visitor);
    }
}