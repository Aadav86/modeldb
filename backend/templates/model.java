// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated.{{package}}.model;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;

public class {{class_name}} {
    {{#properties}}
    {{^required}}
    public {{#type}}{{> type}}{{/type}} {{name}};
    {{/required}}
    {{/properties}}

    public {{class_name}}() {
        {{#properties}}
        {{^required}}
        this.{{name}} = {{#type}}{{> default_value}}{{/type}};
        {{/required}}
        {{/properties}}
    }

    {{#properties}}
    {{^required}}
    public {{class_name}} set{{name}}({{#type}}{{> type}}{{/type}} value) {
        this.{{name}} = value;
        return this;
    }
    {{/required}}
    {{/properties}}

    static public {{class_name}} fromProto(ai.verta.modeldb.versioning.{{class_name}} blob) {
        if (blob == null) {
            return null;
        }

        {{class_name}} obj = new {{class_name}}();
        {{#properties}}
        {{^required}}
        {
            Function<ai.verta.modeldb.versioning.{{class_name}},{{#type}}{{> type}}{{/type}}> f = x -> {{#type}}{{#is_list}}blob.get{{name}}List(){{#list_type}}{{#custom}}.stream().map({{name}}::fromProto).collect(Collectors.toList()){{/custom}}{{/list_type}}{{/is_list}}{{^is_list}}{{#custom}}{{name}}.fromProto{{/custom}}(blob.get{{name}}()){{/is_list}}{{/type}};
            obj.{{name}} = f.apply(blob);
        }
        {{/required}}
        {{/properties}}
        return obj;
    }

    public ai.verta.modeldb.versioning.{{class_name}}.Builder toProto() {
        ai.verta.modeldb.versioning.{{class_name}}.Builder builder = ai.verta.modeldb.versioning.{{class_name}}.newBuilder();
        {{#properties}}
        {{^required}}
        {
            if (this.{{name}} != null) {
                Function<ai.verta.modeldb.versioning.{{class_name}}.Builder,Void> f = x -> { {{#type}}{{#is_list}}builder.addAll{{name}}(this.{{name}}{{#list_type}}{{#is_custom}}.stream().map(y -> y.toProto().build()).collect(Collectors.toList()){{/is_custom}}{{/list_type}}){{/is_list}}{{^is_list}}builder.set{{name}}(this.{{name}}{{#is_custom}}.toProto(){{/is_custom}}){{/is_list}}{{/type}}; return null; };
                f.apply(builder);
            }
        }
        {{/required}}
        {{/properties}}
        return builder;
    }

    public void preVisitShallow(Visitor visitor) throws ModelDBException {
        visitor.preVisit{{class_name}}(this);
    }

    public void preVisitDeep(Visitor visitor) throws ModelDBException {
        this.preVisitShallow(visitor);
        {{#properties}}
        {{^required}}
        visitor.preVisitDeep{{#type}}{{> visittype}}{{/type}}(this.{{name}});
        {{/required}}
        {{/properties}}
    }

    public {{class_name}} postVisitShallow(Visitor visitor) throws ModelDBException {
        return visitor.postVisit{{class_name}}(this);
    }

    public {{class_name}} postVisitDeep(Visitor visitor) throws ModelDBException {
        {{#properties}}
        {{^required}}
        this.{{name}} = visitor.postVisitDeep{{#type}}{{> visittype}}{{/type}}(this.{{name}});
        {{/required}}
        {{/properties}}
        return this.postVisitShallow(visitor);
    }
}